<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2019-2020 Elypia CIC
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<configuration xmlns="https://commandler.elypia.org"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="https://commandler.elypia.org application.xsd">
  <commandler>
    <controller type="org.elypia.commandler.DefaultHelpController">
      <name>Help</name>
      <group>Guidance</group>
      <description>Offer generic help through all the modules in this bot.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="help"/>
      <command method="getGroups">
        <name>Show Groups</name>
        <description>Display a list of all metaCommand categories.</description>
        <default>true</default>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="groups"/>
      </command>
      <command method="getControllers">
        <name>Show Modules</name>
        <description>Display a list of all modules in a category.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="modules"/>
        <param>
          <name>group</name>
          <description>The group to list modules for.</description>
        </param>
      </command>
      <command method="getCommands">
        <name>Show Commands</name>
        <description>Display a list of all metaCommands in a module.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="commands"/>
        <param>
          <name>modules</name>
          <description>The module to list commands for.</description>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.BotController">
      <name>Bot</name>
      <group>Utilities</group>
      <description>Generic utilities to check if I'm alive, or get info or bots in the channel.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="bot"/>
      <command method="ping">
        <name>ping</name>
        <description>Check if I'm still alive.</description>
        <static>true</static>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="ping"/>
      </command>
      <command method="pong">
        <name>pong</name>
        <static>true</static>
        <hidden>true</hidden>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="pong"/>
      </command>
      <command method="info">
        <name>Bot Info</name>
        <description>Get information on me and my developers.</description>
        <default>true</default>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="info"/>
      </command>
      <command method="say">
        <name>Say</name>
        <static>true</static>
        <description>I'll repeat what you ask me to say, I'll also delete your message if I have permission.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="say"/>
        <param index="1">
          <name>body</name>
          <description>The text to repeat.</description>
        </param>
      </command>
      <command method="invites">
        <name>Bot Invites</name>
        <description>Get the invites for all bots in the guild.</description>
        <static>true</static>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="invites"/>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.CleverbotController">
      <name>Cleverbot</name>
      <description>Chat with Cleverbot through Discord.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="cb"/>
      <command method="say">
        <name>Talk to Cleverbot</name>
        <description>Say something to Cleverbot and get a response.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="say"/>
        <param index="0">
          <name>body</name>
          <description>What you want to say.</description>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.DeveloperController">
      <name>Developer</name>
      <hidden>true</hidden>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="dev"/>
      <command method="guilds">
        <name>List Guilds</name>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="guilds"/>
      </command>
      <command method="leave">
        <name>Leave Guild</name>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="leave"/>
        <param index="1">
          <name>guild</name>
        </param>
      </command>
      <command method="rename">
        <name>Change my Display</name>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="rename"/>
        <param index="1">
          <name>name</name>
        </param>
      </command>
      <command method="avatar">
        <name>Change my Avatar</name>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="avatar"/>
        <param index="1">
          <name>url</name>
        </param>
      </command>
      <command method="shutdown">
        <name>Shut Me Down Gracefully</name>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="shutdown"/>
      </command>
      <command method="clean">
        <name>Clean Me Up</name>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="clean"/>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.EmoteController">
      <name>Emote</name>
      <group>Discord</group>
      <description>Information on custom emoticons on Discord.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="emote"/>
      <command method="list">
        <name>Emote List</name>
        <description>Get a full list of all emotes in the guild.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="list"/>
        <param index="0">
          <name>guild</name>
          <description>The guild to list emotes for.</description>
          <defaultValue>${s.guild}</defaultValue>
          <property name="org.elypia.comcord.annotations.Scoped.inGuild" value="LOCAL"/>
          <property name="org.elypia.comcord.annotations.Scoped.inPrivate" value="MUTUAL"/>
        </param>
      </command>
      <command method="post">
        <name>Post Emote</name>
        <description>Find and post the specified emote.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="post"/>
        <param index="1">
          <name>emote</name>
          <description>The emote I should send.</description>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.GreetingController">
      <name>Greeting</name>
      <group>Settings</group>
      <description>Change what happens when a bot or user joins or leaves.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="greeting"/>
      <command method="setGreeting">
        <name>Set Greeting</name>
        <description>Set what happens when a certain type of user joins the guild.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="set"/>
        <param index="1">
          <name>greeting</name>
          <description>If when the user "joins", or "leaves".</description>
        </param>
        <param index="2">
          <name>account</name>
          <description>If this is for "users", or "bots".</description>
        </param>
        <param index="3">
          <name>message</name>
          <description>What to actually send when this action occurs.</description>
        </param>
      </command>
      <command method="setChannel">
        <name>Set Channel</name>
        <description>Set or change the channel that messages are sent to.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="channel"/>
        <param index="1">
          <name>channel</name>
          <description>A talkable channel where the message can go.</description>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.GuildController">
      <name>Guild</name>
      <group>Discord</group>
      <description>Information on Discord guilds.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="guild"/>
      <command method="info">
        <name>Guild Info</name>
        <description>Get information on a guild.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="info"/>
        <param index="0">
          <name>guild</name>
          <description>The guild to get information on.</description>
          <defaultValue>${s.guild}</defaultValue>
          <property name="org.elypia.comcord.annotations.Scoped.inGuild" value="LOCAL"/>
          <property name="org.elypia.comcord.annotations.Scoped.inPrivate" value="MUTUAL"/>
        </param>
      </command>
      <command method="prune">
        <name>Prune Messages</name>
        <description>Delete a bunch of messages in the channel.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="prune"/>
        <param index="1">
          <name>amount</name>
          <description>The number of messages to delete.</description>
        </param>
        <param index="2">
          <name>channel</name>
          <description>Which channel to delete messages from.</description>
          <defaultValue>${s.textChannel}</defaultValue>
          <property name="org.elypia.comcord.annotations.Scoped.inGuild" value="LOCAL"/>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.LevelController">
      <name>Level and XP</name>
      <group>Settings</group>
      <description>Configuring how your members level up.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="lvl"/>
      <command method="message">
        <name>Set Level Up Message</name>
        <description>Set the message that is sent when a user levels up.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="message"/>
        <param index="1">
          <name>message</name>
          <description>The message to send when a member levels up.</description>
        </param>
      </command>
      <command method="test">
        <name>Test Notification</name>
        <description>Let's pretend you levelled up and give you a notification!</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="test"/>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.LocaleController">
      <name>Language and Locale</name>
      <group>Settings</group>
      <description>Change how text is formatted or the language I speak.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="locale"/>
      <command method="setGlobalLocale">
        <name>Guild Locale</name>
        <description>Set the default locale for the guild.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="guild"/>
        <param index="1">
          <name>locale</name>
          <description>The locale by name, country, or both.</description>
        </param>
      </command>
      <command method="setLocalLocale">
        <name>Channel Locale</name>
        <description>Set the locale for this channel, this could be in a guild or private.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="channel"/>
        <param index="1">
          <name>locale</name>
          <description>The locale by name, country, or both.</description>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.OsuController">
      <name>osu!</name>
      <group>Gaming</group>
      <description>Integration with osu! the popular rhythm game.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="osu"/>
      <command method="get">
        <name>Get Player</name>
        <description>Display information on an osu! player.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="get"/>
        <param index="1">
          <name>players</name>
          <description>The players to get information on.</description>
        </param>
        <param index="2">
          <name>mode</name>
          <description>The hame mode to get players on.</description>
          <defaultValue>0</defaultValue>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.PrefixController">
      <name>Prefix</name>
      <group>Settings</group>
      <description>Change or disable the prefix to use my commands!</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="prefix"/>
      <command method="setPrefix">
        <name>Set Prefix</name>
        <description>Change the prefix if you're not into the current one.</description>
        <default>true</default>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="set"/>
        <param index="1">
          <name>prefix</name>
          <description>The new prefix to use.</description>
        </param>
      </command>
      <command method="enableMentionOnly">
        <name>Mention Only</name>
        <description>Disable using the guild prefix to interact with the bot.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="mention"/>
      </command>
    </controller>

    <!--<controller type="org.elypia.alexis.controllers.RolesController">-->
      <!--<name>Roles</name>-->
      <!--<group>Settings</group>-->
      <!--<description>Configure join roles or other self-assignable roles!</description>-->
      <!--<property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="role"/>-->
      <!--<command method="getSelfAssignableRoles">-->
        <!--<name>List Self-Assignable Roles</name>-->
        <!--<description>List all roles that a user could assign to themselves.</description>-->
        <!--<property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="list"/>-->
      <!--</command>-->
      <!--<command method="allow">-->
        <!--<name>Allow Self-Assignable Roles</name>-->
        <!--<description>White list roles as self-assignable so users without permission can add them to themselves.</description>-->
        <!--<property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="allow"/>-->
        <!--<param index="1">-->
          <!--<name>roles</name>-->
          <!--<description>A list of roles you want to make self-assignable.</description>-->
        <!--</param>-->
      <!--</command>-->
      <!--<command method="assign">-->
        <!--<name>Mention Only</name>-->
        <!--<description>Disable using the guild prefix to interact with the bot.</description>-->
        <!--<static>true</static>-->
        <!--<property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="iam"/>-->
        <!--<param index="1">-->
          <!--<name>roles</name>-->
          <!--<description>A list of roles you want to self-assign.</description>-->
        <!--</param>-->
      <!--</command>-->
    <!--</controller>-->

    <controller type="org.elypia.alexis.controllers.RuneScapeController">
      <name>RuneScape</name>
      <group>Gaming</group>
      <description>Integration with RuneScape, the popular MMORPG.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="rs"/>
      <command method="quests">
        <name>Quests</name>
        <description>Get information on quests a player has completed.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="quests"/>
        <param index="0">
          <name>username</name>
          <description>The player to get quests on.</description>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.SteamController">
      <name>Steam</name>
      <group>Gaming</group>
      <description>Integrate with Steam.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="steam"/>
      <command method="getId">
        <name>Get Player Steam64 ID</name>
        <description>Return the players Steam64 ID.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="id"/>
        <property name="org.elypia.comcord.messengers.NumberToMessageMessenger.formatted" value="false"/>
        <param index="0">
          <name>username</name>
          <description>The player to retrieve the ID of.</description>
        </param>
      </command>
      <command method="getPlayerById">
        <name>Get Player by ID</name>
        <description>Get general profile information on a player by ID.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="getbyid"/>
        <param index="0">
          <name>id</name>
          <description>The Steam64 ID of the player.</description>
        </param>
      </command>
      <command method="getPlayerByName">
        <name>Get Player</name>
        <description>Get general profile information on a player by vanity URL.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="get"/>
        <param index="0">
          <name>username</name>
          <description>The player to get the profile of.</description>
        </param>
      </command>
      <command method="getRandomGame">
        <name>Game Roulette</name>
        <description>Looking to see random games or want me to choose what you play?</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="rand"/>
        <param index="0">
          <name>username</name>
          <description>The player to get quests on.</description>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.TranslateController">
      <name>Translate</name>
      <description>Utilise Google Translate to translate messages or enable react translations.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="trans"/>
      <command method="translate">
        <name>Translate</name>
        <description>I'll translate whatever you tell me to into the specified language.</description>
        <default>true</default>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="translate"/>
        <param index="0">
          <name>body</name>
          <description>The text to translate.</description>
        </param>
        <param index="1">
          <name>language</name>
          <description>The language to translate to.</description>
        </param>
      </command>
      <command method="toggle">
        <name>Toggle React Translation</name>
        <description>I'll translate a message for you on reaction; I'll have to assume the language though.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="toggle"/>
        <param index="0">
          <name>toggle</name>
          <description>If reaction translation should be enabled or disbaled.</description>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.TwitchController">
      <name>Twitch</name>
      <group>Media</group>
      <description>View information on streamers and set up notifications.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="twitch"/>
      <command method="info">
        <name>Streamer Info</name>
        <description>Get information on quests a player has completed.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="info"/>
        <param index="0">
          <name>username</name>
          <description>The player to get quests on.</description>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.UrbanDictionaryController">
      <name>Urban Dictionary</name>
      <description>Search for the definition of cool words.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="ud"/>
      <command method="define">
        <name>Define</name>
        <description>Define a single word, or a list of words.</description>
        <default>true</default>
        <static>true</static>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="define"/>
        <param index="1">
          <name>words</name>
          <description>The words to define.</description>
        </param>
        <param index="2">
          <name>random</name>
          <description>If to get a random definition, or the top one.</description>
          <defaultValue>false</defaultValue>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.UserController">
      <name>Users</name>
      <group>Discord</group>
      <description>Interact or get information on users.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="user"/>
      <command method="info">
        <name>User Info</name>
        <description>Display information on a user.</description>
        <default>true</default>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="info"/>
        <param index="0">
          <name>username</name>
          <description>The name of the user.</description>
          <defaultValue>${s.author}</defaultValue>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.UtilitiesController">
      <name>Utilities</name>
      <description>Generic utilities that might come in handy in chat.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="utils"/>
      <command method="count">
        <name>Character Count</name>
        <description>See how many characters Discord see's your message as.</description>
        <static>true</static>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="count"/>
        <param index="0">
          <name>body</name>
          <description>What you want me to count up.</description>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.VoiceController">
      <name>Voice</name>
      <group>Discord</group>
      <description>Utilities based around voice channels.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="voice"/>
      <command method="mention">
        <name>Mention in Voice Channel</name>
        <description>Mention all users in the specified voice channels.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="mention"/>
        <param index="1">
          <name>channels</name>
          <description>The channels to mention users from.</description>
          <property name="org.elypia.comcord.annotations.Scoped.inGuild" value="LOCAL"/>
        </param>
      </command>
    </controller>

    <controller type="org.elypia.alexis.controllers.YouTubeController">
      <name>YouTube</name>
      <group>Media</group>
      <description>Search YouTube for videos, playlists, and channels.</description>
      <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="yt"/>
      <command method="search">
        <name>Search</name>
        <description>Search YouTube for a video.</description>
        <property name="org.elypia.commandler.dispatchers.StandardDispatcher.aliases" value="search"/>
        <param index="0">
          <name>query</name>
          <description>The query to search on YouTube.</description>
        </param>
      </command>
    </controller>

    <adapter type="org.elypia.alexis.adapters.LanguageAdapter">
      <compatible>com.google.cloud.translate.Language</compatible>
    </adapter>
    <adapter type="org.elypia.alexis.adapters.OsuModeAdapter">
      <compatible>org.elypia.elypiai.osu.data.OsuMode</compatible>
    </adapter>

    <messenger type="org.elypia.alexis.messengers.DefinitionMessenger" provides="net.dv8tion.jda.api.entities.Message">
      <compatible>org.elypia.elypiai.urbandictionary.Definition</compatible>
    </messenger>
    <messenger type="org.elypia.alexis.messengers.GameMessenger" provides="net.dv8tion.jda.api.entities.Message">
      <compatible>org.elypia.elypiai.steam.SteamGame</compatible>
    </messenger>
    <messenger type="org.elypia.alexis.messengers.OsuPlayerMessenger" provides="net.dv8tion.jda.api.entities.Message">
      <compatible>org.elypia.elypiai.osu.Player</compatible>
    </messenger>
    <messenger type="org.elypia.alexis.messengers.SteamUserMessenger" provides="net.dv8tion.jda.api.entities.Message">
      <compatible>org.elypia.elypiai.steam.SteamUser</compatible>
    </messenger>
        <messenger type="org.elypia.alexis.messengers.TranslationMessenger" provides="net.dv8tion.jda.api.entities.Message">
      <compatible>org.elypia.alexis.models.TranslationModel</compatible>
    </messenger>
    <messenger type="org.elypia.alexis.messengers.TwitchUserMessenger" provides="net.dv8tion.jda.api.entities.Message">
      <compatible>com.github.twitch4j.helix.domain.User</compatible>
    </messenger>
    <messenger type="org.elypia.alexis.messengers.UserMessenger" provides="net.dv8tion.jda.api.entities.Message">
      <compatible>net.dv8tion.jda.api.entities.User</compatible>
      <compatible>net.dv8tion.jda.internal.entities.UserImpl</compatible>
    </messenger>
    <messenger type="org.elypia.alexis.messengers.YouTubeMessenger" provides="net.dv8tion.jda.api.entities.Message">
      <compatible>com.google.api.services.youtube.model.SearchResult</compatible>
    </messenger>
  </commandler>
</configuration>
